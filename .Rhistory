PointEst <- function(Mot, Feed, t, Reward, id) {
switch(transformation,
Poi=coef(geeglm(Reward ~ t + factor(Mot) + factor(Feed), family = poisson, id = id, corstr = "independence"))[-1],
Quasipoi=coef(geem(Reward ~ t + factor(Mot) + factor(Feed), family = quasipoisson, id = id, corstr = "independence"))[-1],
NB=coef(geem(Reward ~ t + factor(Mot) + factor(Feed), family = negative.binomial(theta=2), id = id, corstr = "independence"))[-1],
log=coef(lmer(log(Reward+1) ~ t + factor(Mot) + factor(Feed) + (1|id)))$`Data$id[, 1]`[1,-1],
SR=coef(lmer(sqrt(Reward) ~ t + factor(Mot) + factor(Feed) + (1|id)))$`Data$id[, 1]`[1,-1],
bcox=coef(lmer(((Reward^lam-1)/lam) ~ t + factor(Mot) + factor(Feed) + (1|id)))$`Data$id[, 1]`[1,-1])
}
Est <- matrix(nrow = 8, ncol = simu)
Bias <- matrix(nrow = 8, ncol = simu)
Relative.bias <- matrix(nrow = 8, ncol = simu)
for (s in (1:simu)) {
Est[,s]=PointEst(Data$Mot[,s], Data$Feed[,s], Data$t[,s], Data$Reward[,s], Data$id[,s])
Bias[,s]=Est[,s] - Data$true
Relative.bias[,s]=Bias[,s]/Data$true
}
return(
data.frame(
true=Data$true,
Meanest=apply(Est, 1, mean),
EmpiricalVar=apply(Est, 1, var),
MeanBias=apply(Bias, 1, mean),
MeanRMSE=apply(Bias, 1, function(x) sqrt(mean(x^2))),
MeanRelbias=apply(Relative.bias, 1, mean)
)
)
}
c=Estresults(Data, transformation = "log")
####Analysis####
Estresults <- function(Data, transformation) {
PointEst <- function(Mot, Feed, t, Reward, id) {
switch(transformation,
Poi=coef(geeglm(Reward ~ t + factor(Mot) + factor(Feed), family = poisson, id = id, corstr = "independence"))[-1],
Quasipoi=coef(geem(Reward ~ t + factor(Mot) + factor(Feed), family = quasipoisson, id = id, corstr = "independence"))[-1],
NB=coef(geem(Reward ~ t + factor(Mot) + factor(Feed), family = negative.binomial(theta=2), id = id, corstr = "independence"))[-1],
log=coef(lmer(log(Reward+1) ~ t + factor(Mot) + factor(Feed) + (1|id)))$`id`[1,-1],
SR=coef(lmer(sqrt(Reward) ~ t + factor(Mot) + factor(Feed) + (1|id)))$`id`[1,-1],
bcox=coef(lmer(((Reward^lam-1)/lam) ~ t + factor(Mot) + factor(Feed) + (1|id)))$`id`[1,-1])
}
Est <- matrix(nrow = 8, ncol = simu)
Bias <- matrix(nrow = 8, ncol = simu)
Relative.bias <- matrix(nrow = 8, ncol = simu)
for (s in (1:simu)) {
Est[,s]=PointEst(Data$Mot[,s], Data$Feed[,s], Data$t[,s], Data$Reward[,s], Data$id[,s])
Bias[,s]=Est[,s] - Data$true
Relative.bias[,s]=Bias[,s]/Data$true
}
return(
data.frame(
true=Data$true,
Meanest=apply(Est, 1, mean),
EmpiricalVar=apply(Est, 1, var),
MeanBias=apply(Bias, 1, mean),
MeanRMSE=apply(Bias, 1, function(x) sqrt(mean(x^2))),
MeanRelbias=apply(Relative.bias, 1, mean)
)
)
}
c=Estresults(Data, transformation = "log")
####Analysis####
Estresults <- function(Data, transformation) {
PointEst <- function(Mot, Feed, t, Reward, id) {
switch(transformation,
Poi=coef(geeglm(Reward ~ t + factor(Mot) + factor(Feed), family = poisson, id = id, corstr = "independence"))[-1],
Quasipoi=coef(geem(Reward ~ t + factor(Mot) + factor(Feed), family = quasipoisson, id = id, corstr = "independence"))[-1],
NB=coef(geem(Reward ~ t + factor(Mot) + factor(Feed), family = negative.binomial(theta=2), id = id, corstr = "independence"))[-1],
log=coef(lmer(log(Reward+1) ~ t + factor(Mot) + factor(Feed) + (1|id)))$id[1,-1],
SR=coef(lmer(sqrt(Reward) ~ t + factor(Mot) + factor(Feed) + (1|id)))$id[1,-1],
bcox=coef(lmer(((Reward^lam-1)/lam) ~ t + factor(Mot) + factor(Feed) + (1|id)))$id[1,-1])
}
Est <- matrix(nrow = 8, ncol = simu)
Bias <- matrix(nrow = 8, ncol = simu)
Relative.bias <- matrix(nrow = 8, ncol = simu)
return(
PointEst(Data$Mot[,1], Data$Feed[,1], Data$t[,1], Data$Reward[,1], Data$id[,1])
)
# for (s in (1:simu)) {
#   Est[,s]=PointEst(Data$Mot[,s], Data$Feed[,s], Data$t[,s], Data$Reward[,s], Data$id[,s])
#   Bias[,s]=Est[,s] - Data$true
#   Relative.bias[,s]=Bias[,s]/Data$true
# }
# return(
# data.frame(
# true=Data$true,
# Meanest=apply(Est, 1, mean),
# EmpiricalVar=apply(Est, 1, var),
# MeanBias=apply(Bias, 1, mean),
# MeanRMSE=apply(Bias, 1, function(x) sqrt(mean(x^2))),
# MeanRelbias=apply(Relative.bias, 1, mean)
# )
# )
}
c=Estresults(Data, transformation = "log")
c
Est <- matrix(nrow = 8, ncol = simu)
Est[,1] <- c
Est
View(Est)
Est <- matrix(nrow = 8, ncol = simu)
View(Est)
Est[,1] <- c(c)
c(c)
c
as.vector(c)
Est <- matrix(nrow = 8, ncol = simu)
Est[,1]=as.vector(c)
Est <- matrix(nrow = 8, ncol = simu)
Est[,1]
Est[,1]<-c(seq(1,8,by=1))
Est[,1]<-unlist(c)
####Analysis####
Estresults <- function(Data, transformation) {
PointEst <- function(Mot, Feed, t, Reward, id) {
switch(transformation,
Poi=coef(geeglm(Reward ~ t + factor(Mot) + factor(Feed), family = poisson, id = id, corstr = "independence"))[-1],
Quasipoi=coef(geem(Reward ~ t + factor(Mot) + factor(Feed), family = quasipoisson, id = id, corstr = "independence"))[-1],
NB=coef(geem(Reward ~ t + factor(Mot) + factor(Feed), family = negative.binomial(theta=2), id = id, corstr = "independence"))[-1],
log=coef(lmer(log(Reward+1) ~ t + factor(Mot) + factor(Feed) + (1|id)))$id[1,-1],
SR=coef(lmer(sqrt(Reward) ~ t + factor(Mot) + factor(Feed) + (1|id)))$id[1,-1],
bcox=coef(lmer(((Reward^lam-1)/lam) ~ t + factor(Mot) + factor(Feed) + (1|id)))$id[1,-1])
}
Est <- matrix(nrow = 8, ncol = simu)
Bias <- matrix(nrow = 8, ncol = simu)
Relative.bias <- matrix(nrow = 8, ncol = simu)
for (s in (1:simu)) {
Est[,s]=PointEst(Data$Mot[,s], Data$Feed[,s], Data$t[,s], Data$Reward[,s], Data$id[,s])
Bias[,s]=Est[,s] - unlist(Data$true)
Relative.bias[,s]=Bias[,s]/unlist(Data$true)
}
return(
data.frame(
true=Data$true,
Meanest=apply(Est, 1, mean),
EmpiricalVar=apply(Est, 1, var),
MeanBias=apply(Bias, 1, mean),
MeanRMSE=apply(Bias, 1, function(x) sqrt(mean(x^2))),
MeanRelbias=apply(Relative.bias, 1, mean)
)
)
}
c=Estresults(Data, transformation = "log")
####Analysis####
Estresults <- function(Data, transformation) {
PointEst <- function(Mot, Feed, t, Reward, id) {
switch(transformation,
Poi=coef(geeglm(Reward ~ t + factor(Mot) + factor(Feed), family = poisson, id = id, corstr = "independence"))[-1],
Quasipoi=coef(geem(Reward ~ t + factor(Mot) + factor(Feed), family = quasipoisson, id = id, corstr = "independence"))[-1],
NB=coef(geem(Reward ~ t + factor(Mot) + factor(Feed), family = negative.binomial(theta=2), id = id, corstr = "independence"))[-1],
log=coef(lmer(log(Reward+1) ~ t + factor(Mot) + factor(Feed) + (1|id)))$id[1,-1],
SR=coef(lmer(sqrt(Reward) ~ t + factor(Mot) + factor(Feed) + (1|id)))$id[1,-1],
bcox=coef(lmer(((Reward^lam-1)/lam) ~ t + factor(Mot) + factor(Feed) + (1|id)))$id[1,-1])
}
Est <- matrix(nrow = 8, ncol = simu)
Bias <- matrix(nrow = 8, ncol = simu)
Relative.bias <- matrix(nrow = 8, ncol = simu)
for (s in (1:simu)) {
Est[,s]=unlist(PointEst(Data$Mot[,s], Data$Feed[,s], Data$t[,s], Data$Reward[,s], Data$id[,s]))
Bias[,s]=Est[,s] - Data$true
Relative.bias[,s]=Bias[,s]/Data$true
}
return(
data.frame(
true=Data$true,
Meanest=apply(Est, 1, mean),
EmpiricalVar=apply(Est, 1, var),
MeanBias=apply(Bias, 1, mean),
MeanRMSE=apply(Bias, 1, function(x) sqrt(mean(x^2))),
MeanRelbias=apply(Relative.bias, 1, mean)
)
)
}
c=Estresults(Data, transformation = "log")
c
c=Estresults(Data, transformation = "poi")
coef(geeglm(Data$Reward ~ Data$t + factor(Data$Mot) + factor(Data$Feed), family = poisson, id = Data$id, corstr = "independence"))
coef(geeglm(Data$Reward[,1] ~ Data$t[,1] + factor(Data$Mot[,1]) + factor(Data$Feed[,1]), family = poisson, id = Data$id[,1], corstr = "independence"))
coef(geeglm(Data$Reward[,1] ~ Data$t[,1] + factor(Data$Mot[,1]) + factor(Data$Feed[,1]), family = poisson, id = Data$id[,1], corstr = "independence"))[-1]
unlist(coef(geeglm(Data$Reward[,1] ~ Data$t[,1] + factor(Data$Mot[,1]) + factor(Data$Feed[,1]), family = poisson, id = Data$id[,1], corstr = "independence"))[-1])
f=unlist(coef(geeglm(Data$Reward[,1] ~ Data$t[,1] + factor(Data$Mot[,1]) + factor(Data$Feed[,1]), family = poisson, id = Data$id[,1], corstr = "independence"))[-1])
Est <- matrix(nrow = 8, ncol = simu)
Est[,1]=f
####Analysis####
Estresults <- function(Data, transformation) {
PointEst <- function(Mot, Feed, t, Reward, id) {
switch(transformation,
Poi=coef(geeglm(Reward ~ t + factor(Mot) + factor(Feed), family = poisson, id = id, corstr = "independence"))[-1],
Quasipoi=coef(geem(Reward ~ t + factor(Mot) + factor(Feed), family = quasipoisson, id = id, corstr = "independence"))[-1],
NB=coef(geem(Reward ~ t + factor(Mot) + factor(Feed), family = negative.binomial(theta=2), id = id, corstr = "independence"))[-1],
log=coef(lmer(log(Reward+1) ~ t + factor(Mot) + factor(Feed) + (1|id)))$id[1,-1],
SR=coef(lmer(sqrt(Reward) ~ t + factor(Mot) + factor(Feed) + (1|id)))$id[1,-1],
bcox=coef(lmer(((Reward^lam-1)/lam) ~ t + factor(Mot) + factor(Feed) + (1|id)))$id[1,-1])
}
Est <- matrix(nrow = 8, ncol = simu)
Bias <- matrix(nrow = 8, ncol = simu)
Relative.bias <- matrix(nrow = 8, ncol = simu)
return(unlist(PointEst(Data$Mot[,s], Data$Feed[,s], Data$t[,s], Data$Reward[,s], Data$id[,s])))
# for (s in (1:simu)) {
#   Est[,s]=unlist(PointEst(Data$Mot[,s], Data$Feed[,s], Data$t[,s], Data$Reward[,s], Data$id[,s]))
#   Bias[,s]=Est[,s] - Data$true
#   Relative.bias[,s]=Bias[,s]/Data$true
# }
#
# return(
# data.frame(
# true=Data$true,
# Meanest=apply(Est, 1, mean),
# EmpiricalVar=apply(Est, 1, var),
# MeanBias=apply(Bias, 1, mean),
# MeanRMSE=apply(Bias, 1, function(x) sqrt(mean(x^2))),
# MeanRelbias=apply(Relative.bias, 1, mean)
# )
# )
}
c=Estresults(Data, transformation = "poi")
c
c=Estresults(Data, transformation = "log")
c
####Analysis####
Estresults <- function(Data, transformation) {
PointEst <- function(Mot, Feed, t, Reward, id) {
switch(transformation,
Poi=coef(geeglm(Reward ~ t + factor(Mot) + factor(Feed), family = poisson, id = id, corstr = "independence"))[-1],
Quasipoi=coef(geem(Reward ~ t + factor(Mot) + factor(Feed), family = quasipoisson, id = id, corstr = "independence"))[-1],
NB=coef(geem(Reward ~ t + factor(Mot) + factor(Feed), family = negative.binomial(theta=2), id = id, corstr = "independence"))[-1],
log=coef(lmer(log(Reward+1) ~ t + factor(Mot) + factor(Feed) + (1|id)))$id[1,-1],
SR=coef(lmer(sqrt(Reward) ~ t + factor(Mot) + factor(Feed) + (1|id)))$id[1,-1],
bcox=coef(lmer(((Reward^lam-1)/lam) ~ t + factor(Mot) + factor(Feed) + (1|id)))$id[1,-1])
}
Est <- matrix(nrow = 8, ncol = simu)
Bias <- matrix(nrow = 8, ncol = simu)
Relative.bias <- matrix(nrow = 8, ncol = simu)
return((PointEst(Data$Mot[,s], Data$Feed[,s], Data$t[,s], Data$Reward[,s], Data$id[,s])))
# for (s in (1:simu)) {
#   Est[,s]=unlist(PointEst(Data$Mot[,s], Data$Feed[,s], Data$t[,s], Data$Reward[,s], Data$id[,s]))
#   Bias[,s]=Est[,s] - Data$true
#   Relative.bias[,s]=Bias[,s]/Data$true
# }
#
# return(
# data.frame(
# true=Data$true,
# Meanest=apply(Est, 1, mean),
# EmpiricalVar=apply(Est, 1, var),
# MeanBias=apply(Bias, 1, mean),
# MeanRMSE=apply(Bias, 1, function(x) sqrt(mean(x^2))),
# MeanRelbias=apply(Relative.bias, 1, mean)
# )
# )
}
c=Estresults(Data, transformation = "poi")
c
####Analysis####
Estresults <- function(Data, transformation) {
PointEst <- function(Mot, Feed, t, Reward, id) {
switch(transformation,
Poi=coef(geeglm(Reward ~ t + factor(Mot) + factor(Feed), family = poisson, id = id, corstr = "independence"))[-1],
Quasipoi=coef(geem(Reward ~ t + factor(Mot) + factor(Feed), family = quasipoisson, id = id, corstr = "independence"))[-1],
NB=coef(geem(Reward ~ t + factor(Mot) + factor(Feed), family = negative.binomial(theta=2), id = id, corstr = "independence"))[-1],
log=coef(lmer(log(Reward+1) ~ t + factor(Mot) + factor(Feed) + (1|id)))$id[1,-1],
SR=coef(lmer(sqrt(Reward) ~ t + factor(Mot) + factor(Feed) + (1|id)))$id[1,-1],
bcox=coef(lmer(((Reward^lam-1)/lam) ~ t + factor(Mot) + factor(Feed) + (1|id)))$id[1,-1])
}
Est <- matrix(nrow = 8, ncol = simu)
Bias <- matrix(nrow = 8, ncol = simu)
Relative.bias <- matrix(nrow = 8, ncol = simu)
for (s in (1:simu)) {
Est[,s]=unlist(PointEst(Data$Mot[,s], Data$Feed[,s], Data$t[,s], Data$Reward[,s], Data$id[,s]))
Bias[,s]=Est[,s] - Data$true
Relative.bias[,s]=Bias[,s]/Data$true
}
return(
data.frame(
true=Data$true,
Meanest=apply(Est, 1, mean),
EmpiricalVar=apply(Est, 1, var),
MeanBias=apply(Bias, 1, mean),
MeanRMSE=apply(Bias, 1, function(x) sqrt(mean(x^2))),
MeanRelbias=apply(Relative.bias, 1, mean)
)
)
}
c=Estresults(Data, transformation = "Poi")
c=Estresults(Data, transformation = "SR")
c
GetAnalyses=function(Data) {
list(
Data=Data,
NB=Estresults(Data, transformation="NB"),
Poi=Estresults(Data, transformation="Poi"),
Quasipoi=Estresults(Data, transformation="Poi"),
SR=Estresults(Data, transformation="SR"),
log=Estresults(Data, transformation="log"),
bcox=Estresults(Data, transformation="bcox")
)
}
GetAnalyses(Data)
####Analysis####
Estresults <- function(Data, transformation) {
PointEst <- function(Mot, Feed, t, Reward, id) {
switch(transformation,
Poi=coef(geeglm(Reward ~ t + factor(Mot) + factor(Feed), family = poisson, id = id, corstr = "independence"))[-1],
Quasipoi=coef(geem(Reward ~ t + factor(Mot) + factor(Feed), family = quasipoisson, id = id, corstr = "independence"))[-1],
NB=coef(geem(Reward ~ t + factor(Mot) + factor(Feed), family = negative.binomial(theta=2), id = id, corstr = "independence"))[-1],
log=coef(lmer(log(Reward+1) ~ t + factor(Mot) + factor(Feed) + (1|id)))$id[1,-1],
SR=coef(lmer(sqrt(Reward) ~ t + factor(Mot) + factor(Feed) + (1|id)))$id[1,-1],
bcox=coef(lmer(((Reward^0.5 - 1)/0.5) ~ t + factor(Mot) + factor(Feed) + (1|id)))$id[1,-1])
}
Est <- matrix(nrow = 8, ncol = simu)
Bias <- matrix(nrow = 8, ncol = simu)
Relative.bias <- matrix(nrow = 8, ncol = simu)
for (s in (1:simu)) {
Est[,s]=unlist(PointEst(Data$Mot[,s], Data$Feed[,s], Data$t[,s], Data$Reward[,s], Data$id[,s]))
Bias[,s]=Est[,s] - Data$true
Relative.bias[,s]=Bias[,s]/Data$true
}
return(
data.frame(
true=Data$true,
Meanest=apply(Est, 1, mean),
EmpiricalVar=apply(Est, 1, var),
MeanBias=apply(Bias, 1, mean),
MeanRMSE=apply(Bias, 1, function(x) sqrt(mean(x^2))),
MeanRelbias=apply(Relative.bias, 1, mean)
)
)
}
GetAnalyses=function(Data) {
list(
Data=Data,
NB=Estresults(Data, transformation="NB"),
Poi=Estresults(Data, transformation="Poi"),
Quasipoi=Estresults(Data, transformation="Poi"),
SR=Estresults(Data, transformation="SR"),
log=Estresults(Data, transformation="log"),
bcox=Estresults(Data, transformation="bcox")
)
}
####Analysis####
Estresults <- function(Data, transformation) {
PointEst <- function(Mot, Feed, t, Reward, id) {
switch(transformation,
Poi=coef(geeglm(Reward ~ t + factor(Mot) + factor(Feed), family = poisson, id = id, corstr = "independence"))[-1],
Quasipoi=coef(geem(Reward ~ t + factor(Mot) + factor(Feed), family = quasipoisson, id = id, corstr = "independence"))[-1],
NB=coef(geem(Reward ~ t + factor(Mot) + factor(Feed), family = negative.binomial(theta=2), id = id, corstr = "independence"))[-1],
log=coef(lmer(log(Reward+1) ~ t + factor(Mot) + factor(Feed) + (1|id)))$id[1,-1],
SR=coef(lmer(sqrt(Reward) ~ t + factor(Mot) + factor(Feed) + (1|id)))$id[1,-1],
bcox=coef(lmer(((Reward^0.5 - 1)/0.5) ~ t + factor(Mot) + factor(Feed) + (1|id)))$id[1,-1])
}
Est <- matrix(nrow = 8, ncol = simu)
Bias <- matrix(nrow = 8, ncol = simu)
Relative.bias <- matrix(nrow = 8, ncol = simu)
for (s in (1:simu)) {
Est[,s]=unlist(PointEst(Data$Mot[,s], Data$Feed[,s], Data$t[,s], Data$Reward[,s], Data$id[,s]))
Bias[,s]=Est[,s] - Data$true
Relative.bias[,s]=Bias[,s]/Data$true
}
return(
data.frame(
true=Data$true,
Meanest=apply(Est, 1, mean),
EmpiricalVar=apply(Est, 1, var),
MeanBias=apply(Bias, 1, mean),
MeanRMSE=apply(Bias, 1, function(x) sqrt(mean(x^2))),
MeanRelbias=apply(Relative.bias, 1, mean)
)
)
}
GetAnalyses=function(Data) {
list(
Data=Data,
NB=Estresults(Data, transformation="NB"),
Poi=Estresults(Data, transformation="Poi"),
Quasipoi=Estresults(Data, transformation="Poi"),
SR=Estresults(Data, transformation="SR"),
log=Estresults(Data, transformation="log"),
bcox=Estresults(Data, transformation="bcox")
)
}
####Comparison results
GetAnalyses(Data)
####Comparison results
results <- GetAnalyses(Data)
write.csv (Data$Reward, file ="C:/Users/Xueqing Liu/Desktop/PhD/Project1-MAB/Simulations/Reward.csv")
write.csv (Data$Mot, file ="C:/Users/Xueqing Liu/Desktop/PhD/Project1-MAB/Simulations/Mot.csv")
write.csv (Data$Feed, file ="C:/Users/Xueqing Liu/Desktop/PhD/Project1-MAB/Simulations/Feed.csv")
write.csv (results$NB, file ="C:/Users/Xueqing Liu/Desktop/PhD/Project1-MAB/Simulations/NB.csv")
write.csv (results$Poi, file ="C:/Users/Xueqing Liu/Desktop/PhD/Project1-MAB/Simulations/NB.csv")
write.csv (results$Quasipoi, file ="C:/Users/Xueqing Liu/Desktop/PhD/Project1-MAB/Simulations/NB.csv")
write.csv (results$NB, file ="C:/Users/Xueqing Liu/Desktop/PhD/Project1-MAB/Simulations/NB.csv")
write.csv (results$Poi, file ="C:/Users/Xueqing Liu/Desktop/PhD/Project1-MAB/Simulations/Poi.csv")
write.csv (results$Quasipoi, file ="C:/Users/Xueqing Liu/Desktop/PhD/Project1-MAB/Simulations/Quasipoi.csv")
write.csv (results$SR, file ="C:/Users/Xueqing Liu/Desktop/PhD/Project1-MAB/Simulations/SR.csv")
write.csv (results$log, file ="C:/Users/Xueqing Liu/Desktop/PhD/Project1-MAB/Simulations/log.csv")
write.csv (results$bcox, file ="C:/Users/Xueqing Liu/Desktop/PhD/Project1-MAB/Simulations/bcox.csv")
colMeans(Reward)
plot(Reward[,1])
data_frame <- data.frame(Mot, Feed, Reward, id, t0)
ggplot(data_frame, aes(x = id, y = Reward)) + geom_point()
####plot####
library(ggplot2)
colMeans(Reward)
data_frame <- data.frame(Mot, Feed, Reward, id, t0)
ggplot(data_frame, aes(x = id, y = Reward)) + geom_point()
View(data_frame)
ggplot(aes(x = id[,1], y = Reward[,1])) + geom_point()
data_frame <- data.frame(Mot[,1], Feed[,1], Reward[,1], id[,1], t0[,1])
ggplot(data_frame, aes(x = id[,1], y = Reward[,1])) + geom_point()
ggplot(data_frame, aes(x = id[,1], y = Reward[,1])) + geom_point() + labs(x="Subject",y="Step count")
ggplot(data_frame, aes(x = t0[,1], y = Reward[,1])) + geom_point() + labs(x="Study day",y="Step count")
View(results$NB)
####Analysis####
Estresults <- function(Data, transformation) {
PointEst <- function(Mot, Feed, t, Reward, id) {
switch(transformation,
Poi=coef(geeglm(Reward ~ t + factor(Mot) + factor(Feed), family = poisson, id = id, corstr = "independence"))[-1],
Quasipoi=coef(geem(Reward ~ t + factor(Mot) + factor(Feed), family = quasipoisson, id = id, corstr = "independence"))[-1],
NB=coef(geem(Reward ~ t + factor(Mot) + factor(Feed), family = negative.binomial(theta=2), id = id, corstr = "independence"))[-1],
log=coef(lmer(log(Reward+1) ~ t + factor(Mot) + factor(Feed) + (1|id)))$id[1,-1],
SR=coef(lmer(sqrt(Reward) ~ t + factor(Mot) + factor(Feed) + (1|id)))$id[1,-1],
bcox=coef(lmer(((Reward^0.5 - 1)/0.5) ~ t + factor(Mot) + factor(Feed) + (1|id)))$id[1,-1])
}
Est <- matrix(nrow = 8, ncol = simu)
Bias <- matrix(nrow = 8, ncol = simu)
Relative.bias <- matrix(nrow = 8, ncol = simu)
for (s in (1:simu)) {
Est[,s]=unlist(PointEst(Data$Mot[,s], Data$Feed[,s], Data$t[,s], Data$Reward[,s], Data$id[,s]))
Bias[,s]=Est[,s] - Data$true
Relative.bias[,s]=Bias[,s]/Data$true
}
return(
data.frame(
true=Data$true,
Meanest=apply(Est, 1, mean),
EmpiricalSE=apply(Est, 1, se),
MeanBias=apply(Bias, 1, mean),
MeanRMSE=apply(Bias, 1, function(x) sqrt(mean(x^2))),
MeanRelbias=apply(Relative.bias, 1, mean)
)
)
}
GetAnalyses=function(Data) {
list(
Data=Data,
NB=Estresults(Data, transformation="NB"),
Poi=Estresults(Data, transformation="Poi"),
Quasipoi=Estresults(Data, transformation="Poi"),
SR=Estresults(Data, transformation="SR"),
log=Estresults(Data, transformation="log"),
bcox=Estresults(Data, transformation="bcox")
)
}
####Comparison results
results <- GetAnalyses(Data)
se
?SE
?sd
####Analysis####
Estresults <- function(Data, transformation) {
PointEst <- function(Mot, Feed, t, Reward, id) {
switch(transformation,
Poi=coef(geeglm(Reward ~ t + factor(Mot) + factor(Feed), family = poisson, id = id, corstr = "independence"))[-1],
Quasipoi=coef(geem(Reward ~ t + factor(Mot) + factor(Feed), family = quasipoisson, id = id, corstr = "independence"))[-1],
NB=coef(geem(Reward ~ t + factor(Mot) + factor(Feed), family = negative.binomial(theta=2), id = id, corstr = "independence"))[-1],
log=coef(lmer(log(Reward+1) ~ t + factor(Mot) + factor(Feed) + (1|id)))$id[1,-1],
SR=coef(lmer(sqrt(Reward) ~ t + factor(Mot) + factor(Feed) + (1|id)))$id[1,-1],
bcox=coef(lmer(((Reward^0.5 - 1)/0.5) ~ t + factor(Mot) + factor(Feed) + (1|id)))$id[1,-1])
}
Est <- matrix(nrow = 8, ncol = simu)
Bias <- matrix(nrow = 8, ncol = simu)
Relative.bias <- matrix(nrow = 8, ncol = simu)
for (s in (1:simu)) {
Est[,s]=unlist(PointEst(Data$Mot[,s], Data$Feed[,s], Data$t[,s], Data$Reward[,s], Data$id[,s]))
Bias[,s]=Est[,s] - Data$true
Relative.bias[,s]=Bias[,s]/Data$true
}
return(
data.frame(
true=Data$true,
Meanest=apply(Est, 1, mean),
EmpiricalSE=apply(Est, 1, sd),
MeanBias=apply(Bias, 1, mean),
MeanRMSE=apply(Bias, 1, function(x) sqrt(mean(x^2))),
MeanRelbias=apply(Relative.bias, 1, mean)
)
)
}
GetAnalyses=function(Data) {
list(
Data=Data,
NB=Estresults(Data, transformation="NB"),
Poi=Estresults(Data, transformation="Poi"),
Quasipoi=Estresults(Data, transformation="Poi"),
SR=Estresults(Data, transformation="SR"),
log=Estresults(Data, transformation="log"),
bcox=Estresults(Data, transformation="bcox")
)
}
####Comparison results
results <- GetAnalyses(Data)
c
results$NB
write.csv (Data$Feed, file ="C:/Users/Xueqing Liu/Desktop/PhD/Project1-MAB/Simulations/Feed.csv")
write.csv (results$NB, file ="C:/Users/Xueqing Liu/Desktop/PhD/Project1-MAB/Simulations/NB.csv")
write.csv (results$Poi, file ="C:/Users/Xueqing Liu/Desktop/PhD/Project1-MAB/Simulations/Poi.csv")
write.csv (results$Quasipoi, file ="C:/Users/Xueqing Liu/Desktop/PhD/Project1-MAB/Simulations/Quasipoi.csv")
write.csv (results$SR, file ="C:/Users/Xueqing Liu/Desktop/PhD/Project1-MAB/Simulations/SR.csv")
write.csv (results$log, file ="C:/Users/Xueqing Liu/Desktop/PhD/Project1-MAB/Simulations/log.csv")
write.csv (results$bcox, file ="C:/Users/Xueqing Liu/Desktop/PhD/Project1-MAB/Simulations/bcox.csv")
c=Estresults(Data, transformation = "log")
?isSi
?isSingular
